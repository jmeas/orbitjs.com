{"project":{},"files":{"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/action-queue.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/action-queue.js","modules":{},"classes":{"Orbit.ActionQueue":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/action.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/action.js","modules":{},"classes":{"Orbit.Action":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","modules":{},"classes":{"Orbit.Document":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/evented.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/evented.js","modules":{},"classes":{"Orbit.Evented":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/main.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/main.js","modules":{"orbit":1},"classes":{"Orbit":1},"fors":{},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js","modules":{},"classes":{"Orbit.Notifier":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/operation.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/operation.js","modules":{},"classes":{"Orbit.Operation":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/request-connector.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/request-connector.js","modules":{},"classes":{"Orbit.RequestConnector":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/transform-connector.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/transform-connector.js","modules":{},"classes":{"Orbit.TransformConnector":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","modules":{},"classes":{"OC.Cache":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/jsonapi-source.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/jsonapi-source.js","modules":{},"classes":{"OC.JSONAPISource":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/local-storage-source.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/local-storage-source.js","modules":{},"classes":{"OC.LocalStorageSource":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/main.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/main.js","modules":{"orbit-common":1},"classes":{"OC":1},"fors":{},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/memory-source.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/memory-source.js","modules":{},"classes":{"OC.MemorySource":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","modules":{},"classes":{"OC.Schema":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/source.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/source.js","modules":{},"classes":{"OC.Source":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/assert.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/assert.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/config.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/config.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/deprecate.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/deprecate.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/diffs.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/diffs.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/eq.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/eq.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/exceptions.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/exceptions.js","modules":{},"classes":{"Orbit.Exception":1,"Orbit.PathNotFoundException":1},"fors":{},"namespaces":{"Orbit":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/functions.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/functions.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","modules":{},"classes":{"Class":1},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/operations.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/operations.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/strings.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/strings.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/stubs.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/stubs.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js","modules":{},"classes":{},"fors":{"Orbit":1},"namespaces":{}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/lib/exceptions.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/lib/exceptions.js","modules":{},"classes":{"OC.OperationNotAllowed":1,"OC.RecordNotFoundException":1,"OC.LinkNotFoundException":1,"OC.RecordAlreadyExistsException":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/cache-integrity-processor.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/cache-integrity-processor.js","modules":{},"classes":{"OC.CacheIntegrityProcessor":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js","modules":{},"classes":{"OC.OperationProcessor":1},"fors":{},"namespaces":{"OC":1}},"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/schema-consistency-processor.js":{"name":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/schema-consistency-processor.js","modules":{},"classes":{"OC.SchemaConsistencyProcessor":1},"fors":{},"namespaces":{"OC":1}}},"modules":{"orbit":{"name":"orbit","submodules":{},"classes":{"Orbit.ActionQueue":1,"Orbit.Action":1,"Orbit.Document":1,"Orbit.Evented":1,"Orbit":1,"Orbit.Notifier":1,"Orbit.Operation":1,"Orbit.RequestConnector":1,"Orbit.TransformConnector":1,"OC.Cache":1,"OC.JSONAPISource":1,"OC.LocalStorageSource":1},"fors":{},"namespaces":{"Orbit":1,"OC":1},"tag":"main","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/local-storage-source.js","line":12,"description":"Contains core methods and classes for Orbit.js","itemtype":"main"},"orbit-common":{"name":"orbit-common","submodules":{},"classes":{"OC":1,"OC.MemorySource":1,"OC.Schema":1,"OC.Source":1,"Orbit.Exception":1,"Orbit.PathNotFoundException":1,"Class":1,"OC.OperationNotAllowed":1,"OC.RecordNotFoundException":1,"OC.LinkNotFoundException":1,"OC.RecordAlreadyExistsException":1,"OC.CacheIntegrityProcessor":1,"OC.OperationProcessor":1,"OC.SchemaConsistencyProcessor":1},"fors":{"Orbit":1},"namespaces":{"OC":1,"Orbit":1},"tag":"main","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/schema-consistency-processor.js","line":4,"description":"The Orbit Common library (namespaced `OC` by default) defines a common set of\ncompatible sources.\n\nThe Common library contains a base abstract class, `Source`, which supports\nboth `Transformable` and `Requestable` interfaces. The method signatures on\n`Source` should be supported by other sources that want to be fully compatible\nwith the Common library.","itemtype":"main"}},"classes":{"Orbit.ActionQueue":{"name":"Orbit.ActionQueue","shortname":"Orbit.ActionQueue","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/action-queue.js","line":7,"description":"`ActionQueue` is a FIFO queue of actions that should be performed sequentially.\n\nActions are added to the queue with `push`. Each action will be processed by\ncalling its `process` method.\n\nIf action calls return a promise, then that promise will be settled before the\nnext action is de-queued and called. If action calls don't return anything,\nthen the next action will be de-queued and called immediately.\n\nBy default, ActionQueues will be processed automatically, as soon as actions\nare pushed to them. This can be overridden by setting the `autoProcess` option\nto `false` and then by calling `process` when you'd like to start processing.","example":["\n\n``` javascript\nvar transform = function(operation) {\n  // perform operation here\n};\n\nvar queue = new ActionQueue();\n\n// push operations into queue synchronously so that they'll be performed\n// sequentially\nqueue.push({\n  process: function() { transform(this.data); },\n  data: {op: 'add', path: ['planets', '123'], value: 'Mercury'}\n});\nqueue.push({\n  process: function() { transform(this.data); },\n  data: {op: 'add', path: ['planets', '234'], value: 'Venus'}\n});\n```"],"params":[{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"autoProcess","description":"Are actions automatically\n                  processed as soon as they are pushed?","type":"Boolean","optional":true,"optdefault":"true"}]}],"is_constructor":1},"Orbit.Action":{"name":"Orbit.Action","shortname":"Orbit.Action","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/action.js","line":5,"description":"`Action` provides a wrapper for actions that are performed in an `ActionQueue`.\n\nActions can maintain optional metadata such as `id` and `data`. This metadata\nmakes it easier to identify actions within a queue. It can also be used by\nactions themselves during processing.\n\nEach Action is associated with a function that should be invoked. This function\ncan be synchronous or asynchronous.\n\n`process` wraps the call to the function with a promise.\n\nEach Action can only succeed once. On failure, the `processing` promise will\nbe reset and the action can be tried again.","params":[{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"id","description":"Optional identifier","type":"Object","optional":true},{"name":"data","description":"Optional data","type":"Object","optional":true},{"name":"process","description":"A function that performs the action","type":"Object","optional":true}]}],"is_constructor":1},"Orbit.Document":{"name":"Orbit.Document","shortname":"Orbit.Document","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":6,"description":"`Document` is a complete implementation of the JSON PATCH spec detailed in\n[RFC 6902](http://tools.ietf.org/html/rfc6902).\n\nA document can be manipulated via a `transform` method that accepts an\n`operation`, or with the methods `add`, `remove`, `replace`, `move`, `copy` and\n`test`.\n\nData at a particular path can be retrieved from a `Document` with `retrieve()`.","params":[{"name":"data","description":"The initial data for the document","type":"Object","optional":true},{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"arrayBasedPaths","description":"Should paths be array based, or `'/'` delimited (the default)?","type":"Boolean","optional":true,"optdefault":"false"}]}],"is_constructor":1},"Orbit.Evented":{"name":"Orbit.Evented","shortname":"Orbit.Evented","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/evented.js","line":18,"description":"The `Evented` interface uses notifiers to add events to an object. Like\nnotifiers, events will send along all of their arguments to subscribed\nlisteners.\n\nThe `Evented` interface can extend an object or prototype as follows:\n\n```javascript\nvar source = {};\nOrbit.Evented.extend(source);\n```\n\nListeners can then register themselves for particular events with `on`:\n\n```javascript\nvar listener1 = function(message) {\n      console.log('listener1 heard ' + message);\n    },\n    listener2 = function(message) {\n      console.log('listener2 heard ' + message);\n    };\n\nsource.on('greeting', listener1);\nsource.on('greeting', listener2);\n\nevented.emit('greeting', 'hello'); // logs \"listener1 heard hello\" and\n                                   //      \"listener2 heard hello\"\n```\n\nListeners can be unregistered from events at any time with `off`:\n\n```javascript\nsource.off('greeting', listener2);\n```\n\nA listener can register itself for multiple events at once:\n\n```javascript\nsource.on('greeting salutation', listener2);\n```\n\nAnd multiple events can be triggered sequentially at once,\nassuming that you want to pass them all the same arguments:\n\n```javascript\nsource.emit('greeting salutation', 'hello', 'bonjour', 'guten tag');\n```\n\nLast but not least, listeners can be polled\n(note that spaces can't be used in event names):\n\n```javascript\nsource.on('question', function(question) {\n  if (question === 'favorite food?') return 'beer';\n});\n\nsource.on('question', function(question) {\n  if (question === 'favorite food?') return 'wasabi almonds';\n});\n\nsource.on('question', function(question) {\n  // this listener doesn't return anything, and therefore won't participate\n  // in the poll\n});\n\nsource.poll('question', 'favorite food?'); // returns ['beer', 'wasabi almonds']\n```","extension":"","is_constructor":1},"Orbit":{"name":"Orbit","shortname":"Orbit","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/main.js","line":8,"description":"Namespace for core Orbit methods and classes.","static":1},"Orbit.Notifier":{"name":"Orbit.Notifier","shortname":"Orbit.Notifier","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js","line":3,"description":"The `Notifier` class can emit messages to an array of subscribed listeners.\nHere's a simple example:\n\n```javascript\nvar notifier = new Orbit.Notifier();\nnotifier.addListener(function(message) {\n  console.log(\"I heard \" + message);\n});\nnotifier.addListener(function(message) {\n  console.log(\"I also heard \" + message);\n});\n\nnotifier.emit('hello'); // logs \"I heard hello\" and \"I also heard hello\"\n```\n\nNotifiers can also poll listeners with an event and return their responses:\n\n```javascript\nvar dailyQuestion = new Orbit.Notifier();\ndailyQuestion.addListener(function(question) {\n  if (question === 'favorite food?') return 'beer';\n});\ndailyQuestion.addListener(function(question) {\n  if (question === 'favorite food?') return 'wasabi almonds';\n});\ndailyQuestion.addListener(function(question) {\n  // this listener doesn't return anything, and therefore won't participate\n  // in the poll\n});\n\ndailyQuestion.poll('favorite food?'); // returns ['beer', 'wasabi almonds']\n```\n\nCalls to `emit` and `poll` will send along all of their arguments.","is_constructor":1},"Orbit.Operation":{"name":"Orbit.Operation","shortname":"Orbit.Operation","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/operation.js","line":8,"description":"`Operation` provides a thin wrapper over a JSON Patch operation.\n\nOperations maintain the standard Patch attributes: `op`, `path`, and `value`.\n\nOperations are automatically assigned a UUID `id`. They can maintain their\nancestry in a `log`. In this way, it is possible to determine whether\noperations preceded each other.\n\nOperations can `spawn` descendants, which automatically adds the parent to\nthe child's history.","params":[{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"op","description":"Patch attribute `op`","type":"String","optional":true},{"name":"path","description":"Patch attribute `path`","type":"String","optional":true},{"name":"value","description":"Patch attribute `value`","type":"Object","optional":true},{"name":"parent","description":"parent operation that spawned this one","type":"Operation","optional":true}]}],"is_constructor":1},"Orbit.RequestConnector":{"name":"Orbit.RequestConnector","shortname":"Orbit.RequestConnector","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/request-connector.js","line":7,"description":"A `RequestConnector` observes requests made to a primary source and allows a\nsecondary source to either \"assist\" or \"rescue\" those requests.\n\nA `RequestConnector` can operate in one of two modes:\n\n- In the default `\"rescue\"` mode, the secondary source will only be called upon\nto fulfill a request if the primary source fails to do so.\n\n- In `\"assist\"` mode, the secondary source will be called upon to fulfill a\nrequest before the primary source. Only if the secondary source fails to\nfulfill the request will the primary source be called upon to do so.\n\nUnlike a `TransformConnector`, a `RequestConnector` always blocks\nasynchronous requests before proceeding. In other words, any promises that\nare returned from requests will be settled (either succeeding or failing)\nbefore the connector proceeds.","params":[{"name":"primarySource","description":"","type":"Object"},{"name":"secondarySource","description":"","type":"Object"},{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"mode","description":"Mode of operation: `\"rescue\"` or `\"assist\"`","type":"String","optional":true,"optdefault":"\"rescue\""},{"name":"active","description":"Is the connector is actively observing the `primarySource`?","type":"Boolean","optional":true,"optdefault":"true"}]}],"is_constructor":1},"Orbit.TransformConnector":{"name":"Orbit.TransformConnector","shortname":"Orbit.TransformConnector","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/transform-connector.js","line":6,"description":"A `TransformConnector` observes a source's transforms and applies them to a\ntarget.\n\nEach connector is \"one way\", so bi-directional synchronization between sources\nrequires the creation of two connectors.\n\nA `TransformConnector` can operate in one of two modes:\n\n- In the default \"blocking\" mode, a connector will return a promise to the\n`didTransform` event, which will prevent the original transform from resolving\nuntil the promise itself has resolved.\n\n- In \"non-blocking\" mode, transforms do not block the resolution of the original\ntransform - asynchronous actions are performed afterward.\n\nThe connector's `transform` method actually applies transforms to its target.\nThis method attempts to retrieve the current value at the path of the\ntransformation and resolves any conflicts with the connector's\n`resolveConflicts` method. By default, a simple differential is applied to the\ntarget, although both `transform` and `resolveConflicts` can be overridden to\napply an alternative differencing algorithm.","params":[{"name":"source","description":"","type":"Object"},{"name":"target","description":"","type":"Object"},{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"blocking","description":"Does the connector wait for promises to be settled?","type":"String","optional":true,"optdefault":"true"},{"name":"active","description":"Is the connector is actively observing the `source`?","type":"Boolean","optional":true,"optdefault":"true"}]}],"is_constructor":1},"OC.Cache":{"name":"OC.Cache","shortname":"OC.Cache","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","line":10,"description":"`Cache` provides a thin wrapper over an internally maintained instance of a\n`Document`.\n\n`Cache` prepares records to be cached according to a specified schema. The\nschema also determines the paths at which records will be stored.\n\nOnce cached, data can be accessed at a particular path with `retrieve`. The\nsize of data at a path can be accessed with `length`.","params":[{"name":"schema","description":"","type":"OC.Schema"}],"is_constructor":1},"OC.JSONAPISource":{"name":"OC.JSONAPISource","shortname":"OC.JSONAPISource","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/jsonapi-source.js","line":10,"description":"Source for accessing a JSON API compliant RESTful API with AJAX","extends":"Source","params":[{"name":"schema","description":""},{"name":"options","description":""}],"is_constructor":1},"OC.LocalStorageSource":{"name":"OC.LocalStorageSource","shortname":"OC.LocalStorageSource","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/local-storage-source.js","line":12,"description":"Source for storing data in local storage","extends":"MemorySource","params":[{"name":"schema","description":"","type":"OC.Schema"},{"name":"options","description":"","type":"Object","optional":true}],"is_constructor":1},"OC":{"name":"OC","shortname":"OC","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/main.js","line":14,"description":"Namespace for Orbit Common methods and classes.","static":1},"OC.MemorySource":{"name":"OC.MemorySource","shortname":"OC.MemorySource","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/memory-source.js","line":7,"description":"Source for storing in-memory data","extends":"OC.Source","params":[{"name":"schema","description":""},{"name":"options","description":""}],"is_constructor":1},"OC.Schema":{"name":"OC.Schema","shortname":"OC.Schema","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":7,"description":"`Schema` defines the models allowed in a source, including their keys,\nattributes and relationships. A single schema may be shared across multiple\nsources.\n\nSchemas are defined with an initial set of options, passed in as a constructor\nargument:\n\n``` javascript\n var schema = new Schema({\n   models: {\n     planet: {\n       attributes: {\n         name: {type: 'string'},\n         classification: {type: 'string'}\n       },\n       links: {\n         moons: {type: 'hasMany', model: 'moon', inverse: 'planet'}\n       }\n     },\n     moon: {\n       attributes: {\n         name: {type: 'string'}\n       },\n       links: {\n         planet: {type: 'hasOne', model: 'planet', inverse: 'moons'}\n       }\n     }\n   }\n });\n```\n\nModels should be keyed by their singular name, and should be defined as an\nobject that contains `attributes` and/or `links`.\n\nModels can be registered after a schema's been initialized with\n`registerModel`.\n\n## Fields\n\nThere are three broad categories of fields available for models: keys,\nattributes, and links.\n\nWithin each category, fields may be declared along with options appropriate\nfor the category. Common field options include:\n\n* `type` - a classification, often category-specific, that defines a field's\n  purpose and/or contents.\n\n* `defaultValue` - a value or function that returns a value, to be set on\n  record initialization when a field's value is `undefined`.\n\nDefault fields for models can be specified in a `modelDefaults` object. A\nsingle primary key field, `id`, is defined by default (see below).\n\n### Keys\n\nKeys uniquely identify a record of a particular model type.\n\nKeys may only be of type `\"string\"`, which is also the default and therefore\nunnecessary to declare.\n\nEvery model must define a single \"primary key\", which will be used throughout\nOrbit to identify records of that type uniquely. This should be indicated with\nthe field option `primaryKey: true`.\n\nBy default, `modelDefaults` define a primary key `id` to be used for all\nmodels:\n\n```\n {\n   keys: {\n     'id': {primaryKey: true, defaultValue: uuid}\n   }\n }\n```\n\nThe default primary key has a v4 UUID generator assigned as its `defaultValue`.\nBecause of this, these keys can be used within Orbit and on remote servers with\nan extremely low probability of a conflict.\n\nWhen working with remote servers that do not support UUID primary keys, it's\nnecessary to correlate Orbit IDs with IDs that are generated remotely. In order\nto support this scenario, one or more \"secondary keys\" may also be defined for\na model.\n\nLet's say that you want to track Orbit's primary key locally as a UUID named\n`__id` and also define a remote key named `id`. You could define `modelDefaults`\nin your schema as follows:\n\n```\n var schema = new Schema({\n   modelDefaults: {\n     keys: {\n       '__id': {primaryKey: true, defaultValue: uuid},\n       'id': {}\n     }\n   }\n });\n```\n\nThe `id` field above is considered a secondary key because `primaryKey` is\n`false` by default.\n\nWhen any secondary keys are defined, the schema will maintain a mapping of\nsecondary to primary key values that can be shared by all sources. This\ncentralized mapping assumes that key values will never change once set, which\nis a realistic assumption for distributed systems.\n\n### Attributes\n\nAny properties that define a model's data, with the exception of links to other\nmodels, should be defined as \"attributes\".\n\nAttributes may be defined by their `type`, such as `\"string\"` or `\"date\"`,\nwhich can be used to define their purpose and contents. An attribute's type may\nalso be used to determine how it should be normalized and serialized.\n\n### Links\n\nLinks are properties that define relationships between models. Two types of\nlinks are currently allowed:\n\n* `hasOne` - for to-one relationships\n* `hasMany` - for to-many relationships\n\nLinks must define the related `model` and may optionally define their\n`inverse`, which should correspond to the name of a link on the related model.\nInverse links should be defined when links must be kept synchronized, so that\nadding or removing a link on the primary model results in a corresponding\nchange on the inverse model.\n\nHere's an example of a schema definition that includes links with inverses:\n\n```\n var schema = new Schema({\n   models: {\n     planet: {\n       links: {\n         moons: {type: 'hasMany', model: 'moon', inverse: 'planet'}\n       }\n     },\n     moon: {\n       links: {\n         planet: {type: 'hasOne', model: 'planet', inverse: 'moons'}\n       }\n     }\n   }\n });\n```\n\nTo-many links may be defined with a special attribute, `actsAsSet`, to indicate\nthat they act as a set that should be changed together. Sources should respect\nthis attribute when processing changes.\n\n```\n var schema = new Schema({\n   models: {\n     planet: {\n       links: {\n         moons: {type: 'hasMany', model: 'moon', inverse: 'planet',\n                 actsAsSet: true}\n       }\n     },\n     moon: {\n       links: {\n         planet: {type: 'hasOne', model: 'planet', inverse: 'moons'}\n       }\n     }\n   }\n });\n```\n\n## Model Defaults\n\nThe `modelDefaults` object defines a default model schema for ALL models in the\nschema. This is useful for defining the default ID attribute and any other\nattributes or links that are present across models in the schema.\n\nAs discussed above, `modelDefaults` defines a single primary key by default.\n`modelDefaults` can be overridden to include any number of attributes and links.\nFor instance:\n\n```\n var schema = new Schema({\n   modelDefaults: {\n     keys: {\n       __id: {primaryKey: true, defaultValue: uuid}\n     },\n     attributes: {\n       createdAt: {type: 'date', defaultValue: currentTime}\n     }\n   }\n });\n```\n\nThe default fields can be overridden in or removed from any particular model\ndefinition. To remove any key, attribute or link definition inherited from\n`modelDefaults` simply define the field with a falsey value (`undefined`,\n`null`, or `false`).\n\nFor example, the following schema removes `createdAt` from the `planet` model:\n\n```\n var schema = new Schema({\n   modelDefaults: {\n     keys: {\n       __id: {primaryKey: true, defaultValue: uuid}\n     },\n     attributes: {\n       createdAt: {type: 'date', defaultValue: currentTime}\n     }\n   },\n   models: {\n     planet: {\n       attributes: {\n         name: {type: 'string'},\n         createdAt: undefined\n       }\n     }\n   }\n });\n```","params":[{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"modelDefaults","description":"defaults for model schemas","type":"Object","optional":true},{"name":"pluralize","description":"Function used to pluralize names","type":"Function","optional":true},{"name":"singularize","description":"Function used to singularize names","type":"Function","optional":true},{"name":"models","description":"schemas for individual models supported by this schema","type":"Object","optional":true}]}],"is_constructor":1},"OC.Source":{"name":"OC.Source","shortname":"OC.Source","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/source.js","line":12,"description":"`Source` is an abstract base class to be extended by other sources.","params":[{"name":"schema","description":"","type":"OC.Schema"},{"name":"options","description":""}],"is_constructor":1},"Orbit.Exception":{"name":"Orbit.Exception","shortname":"Orbit.Exception","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/exceptions.js","line":3,"description":"Base Exception","is_constructor":1},"Orbit.PathNotFoundException":{"name":"Orbit.PathNotFoundException","shortname":"Orbit.PathNotFoundException","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"Orbit","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/exceptions.js","line":24,"description":"Exception thrown when a path in a document can not be found.","params":[{"name":"path","description":"","type":"String"}],"is_constructor":1},"Class":{"name":"Class","shortname":"Class","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":196,"description":"A base class that can be extended.","example":["\n\n```javascript\nvar CelestialObject = Class.extend({\n  init: function(name) {\n    this._super();\n    this.name = name;\n    this.isCelestialObject = true;\n  },\n  greeting: function() {\n    return 'Hello from ' + this.name;\n  }\n});\n\nvar Planet = CelestialObject.extend({\n  init: function(name) {\n    this._super.apply(this, arguments);\n    this.isPlanet = true;\n  },\n  greeting: function() {\n    return this._super() + '!';\n  },\n});\n\nvar earth = new Planet('Earth');\n\nconsole.log(earth instanceof Class);           // true\nconsole.log(earth instanceof CelestialObject); // true\nconsole.log(earth instanceof Planet);          // true\n\nconsole.log(earth.isCelestialObject);          // true\nconsole.log(earth.isPlanet);                   // true\n\nconsole.log(earth.greeting());                 // 'Hello from Earth!'\n```"]},"OC.OperationNotAllowed":{"name":"OC.OperationNotAllowed","shortname":"OC.OperationNotAllowed","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/lib/exceptions.js","line":7,"description":"Exception thrown when an operation is not allowed.","params":[{"name":"description","description":"","type":"Object"}],"is_constructor":1},"OC.RecordNotFoundException":{"name":"OC.RecordNotFoundException","shortname":"OC.RecordNotFoundException","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/lib/exceptions.js","line":55,"description":"Exception thrown when a record can not be found.","params":[{"name":"type","description":"","type":"String"},{"name":"record","description":"","type":"Object"}],"is_constructor":1},"OC.LinkNotFoundException":{"name":"OC.LinkNotFoundException","shortname":"OC.LinkNotFoundException","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/lib/exceptions.js","line":68,"description":"Exception thrown when a record can not be found.","params":[{"name":"type","description":"","type":"String"},{"name":"record","description":"","type":"Object"}],"is_constructor":1},"OC.RecordAlreadyExistsException":{"name":"OC.RecordAlreadyExistsException","shortname":"OC.RecordAlreadyExistsException","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/lib/exceptions.js","line":81,"description":"Exception thrown when a record already exists.","params":[{"name":"type","description":"","type":"String"},{"name":"record","description":"","type":"Object"}],"is_constructor":1},"OC.CacheIntegrityProcessor":{"name":"OC.CacheIntegrityProcessor","shortname":"OC.CacheIntegrityProcessor","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/cache-integrity-processor.js","line":4,"description":"An operation processor that ensures that a cache's data is consistent and\ndoesn't contain any dead references.\n\nThis is achieved by maintaining a mapping of reverse links for each record.\nWhen a record is removed, any references to it can also be identified and\nremoved.","extends":"OperationProcessor","params":[{"name":"schema","description":"Schema used to define the data structure and relationships.","type":"OC.Schema","optional":true},{"name":"retrieve","description":"Function used to retrieve data at a specific `path`.","type":"Function","optional":true}],"is_constructor":1},"OC.OperationProcessor":{"name":"OC.OperationProcessor","shortname":"OC.OperationProcessor","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js","line":3,"description":"Operation processors are used to identify operations that should be performed\ntogether to ensure that a `Cache` or other container of data remains\nconsistent and correct.\n\n`OperationProcessor` is an abstract base class to be extended by specific\noperation processors.","params":[{"name":"schema","description":"Schema used to define the data structure and relationships.","type":"OC.Schema","optional":true},{"name":"retrieve","description":"Function used to retrieve data at a specific `path`.","type":"Function","optional":true}],"is_constructor":1},"OC.SchemaConsistencyProcessor":{"name":"OC.SchemaConsistencyProcessor","shortname":"OC.SchemaConsistencyProcessor","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"orbit-common","namespace":"OC","file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/schema-consistency-processor.js","line":4,"description":"An operation processor that ensures that a cache's data is consistent with\nits associated schema.\n\nThis includes maintenance of inverse links and dependent links.","extends":"OperationProcessor","params":[{"name":"schema","description":"Schema used to define the data structure and relationships.","type":"OC.Schema","optional":true},{"name":"retrieve","description":"Function used to retrieve data at a specific `path`.","type":"Function","optional":true}],"is_constructor":1}},"classitems":[{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":30,"description":"Reset the contents of the whole document.\n\nIf no data is specified, the contents of the document will be reset to an\nempty object.","itemtype":"method","name":"reset","params":[{"name":"data","description":"New root object","type":"Object","optional":true}],"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":43,"description":"Retrieve the value at a path.\n\nIf the path does not exist in the document, `PathNotFoundException` will be\nthrown by default. If `quiet` is truthy, `undefined` will be returned\ninstead.","itemtype":"method","name":"retrieve","params":[{"name":"path","description":"","type":"Array or String","optional":true},{"name":"quiet","description":"Return `undefined` instead of throwing an exception if `path` can't be found?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Value at the specified `path` or `undefined`","type":"Object"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":59,"description":"Sets the value at a path.\n\nIf the target location specifies an array index, inserts a new value\ninto the array at the specified index.\n\nIf the target location specifies an object member that does not\nalready exist, adds a new member to the object.\n\nIf the target location specifies an object member that does exist,\nreplaces that member's value.\n\nIf the target location does not exist, throws `PathNotFoundException`.","itemtype":"method","name":"add","params":[{"name":"path","description":"","type":"Array or String"},{"name":"value","description":"","type":"Object"},{"name":"invert","description":"Return the inverse operations?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Array of inverse operations if `invert === true`","type":"Array"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":83,"description":"Removes the value from a path.\n\nIf removing an element from an array, shifts any elements above the\nspecified index one position to the left.\n\nIf the target location does not exist, throws `PathNotFoundException`.","itemtype":"method","name":"remove","params":[{"name":"path","description":"","type":"Array or String"},{"name":"invert","description":"Return the inverse operations?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Array of inverse operations if `invert === true`","type":"Array"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":100,"description":"Replaces the value at a path.\n\nThis operation is functionally identical to a \"remove\" operation for\na value, followed immediately by an \"add\" operation at the same\nlocation with the replacement value.\n\nIf the target location does not exist, throws `PathNotFoundException`.","itemtype":"method","name":"replace","params":[{"name":"path","description":"","type":"Array or String"},{"name":"value","description":"","type":"Object"},{"name":"invert","description":"Return the inverse operations?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Array of inverse operations if `invert === true`","type":"Array"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":119,"description":"Moves an object from one path to another.\n\nIdentical to calling `remove()` followed by `add()`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.","itemtype":"method","name":"move","params":[{"name":"fromPath","description":"","type":"Array or String"},{"name":"toPath","description":"","type":"Array or String"},{"name":"invert","description":"Return the inverse operations?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Array of inverse operations if `invert === true`","type":"Array"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":136,"description":"Copies an object at one path and adds it to another.\n\nIdentical to calling `add()` with the value at `fromPath`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.","itemtype":"method","name":"copy","params":[{"name":"fromPath","description":"","type":"Array or String"},{"name":"toPath","description":"","type":"Array or String"},{"name":"invert","description":"Return the inverse operations?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Array of inverse operations if `invert === true`","type":"Array"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":153,"description":"Tests that the value at a path matches an expectation.\n\nUses `Orbit.eq` to test equality.\n\nThrows `PathNotFoundException` if the path does not exist in the document.","itemtype":"method","name":"test","params":[{"name":"path","description":"","type":"Array or String","optional":true},{"name":"value","description":"Expected value to test","type":"Object","optional":true},{"name":"quiet","description":"Use `undefined` instead of throwing an exception if `path` can't be found?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Does the value at `path` equal `value`?","type":"Boolean"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js","line":170,"description":"Transforms the document with an RFC 6902-compliant operation.\n\nThrows `PathNotFoundException` if the path does not exist in the document.","itemtype":"method","name":"transform","params":[{"name":"operation","description":"","type":"Object","props":[{"name":"op","description":"Must be \"add\", \"remove\", \"replace\", \"move\", \"copy\", or \"test\"","type":"String"},{"name":"path","description":"Path to target location","type":"Array or String"},{"name":"from","description":"Path to source target location. Required for \"copy\" and \"move\"","type":"Array or String"},{"name":"value","description":"Value to set. Required for \"add\", \"replace\" and \"test\"","type":"Object"}]},{"name":"invert","description":"Return the inverse operations?","type":"Boolean","optional":true,"optdefault":"false"}],"return":{"description":"Array of inverse operations if `invert === true`","type":"Array"},"class":"Orbit.Document","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/evented.js","line":92,"description":"Mixes the `Evented` interface into an object","itemtype":"method","name":"extend","params":[{"name":"object","description":"Object to extend","type":"Object"}],"return":{"description":"Extended object","type":"Object"},"class":"Orbit.Evented","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js","line":48,"description":"Add a callback as a listener, which will be triggered when sending\nnotifications.","itemtype":"method","name":"addListener","params":[{"name":"callback","description":"Function to call as a notification","type":"Function"},{"name":"binding","description":"Context in which to call `callback`","type":"Object"}],"class":"Orbit.Notifier","module":"orbit","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js","line":61,"description":"Remove a listener so that it will no longer receive notifications.","itemtype":"method","name":"removeListener","params":[{"name":"callback","description":"Function registered as a callback","type":"Function"},{"name":"binding","description":"Context in which `callback` was registered","type":"Object"}],"class":"Orbit.Notifier","module":"orbit","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js","line":82,"description":"Notify registered listeners.\n\nAny responses from listeners will be ignored.","itemtype":"method","name":"emit","params":[{"name":"Any","description":"number of parameters to be sent to listeners","type":"*"}],"class":"Orbit.Notifier","module":"orbit","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js","line":97,"description":"Poll registered listeners.\n\nAny responses from listeners will be returned in an array.","itemtype":"method","name":"poll","params":[{"name":"Any","description":"number of parameters to be sent to listeners","type":"*"}],"return":{"description":"Array of responses","type":"Array"},"class":"Orbit.Notifier","module":"orbit","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/request-connector.js","line":90,"description":"Should return the handler for a Requestable action.","params":[{"name":"action","description":"- I.E. 'find', 'findLink'","type":"String"}],"return":{"description":"handler to call for that action","type":"Function"},"class":"Orbit.RequestConnector","module":"orbit","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/transform-connector.js","line":132,"itemtype":"method","name":"filterFunction","params":[{"name":"operation","description":"","type":"Object"}],"return":{"description":"`true` if the operation should be processed","type":"Boolean"},"class":"Orbit.TransformConnector","module":"orbit","namespace":"Orbit"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","line":70,"description":"Return the size of data at a particular path","itemtype":"method","name":"length","params":[{"name":"path","description":""}],"return":{"description":"","type":"Number"},"class":"OC.Cache","module":"orbit","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","line":88,"description":"Return data at a particular path.\n\nReturns `undefined` if the path does not exist in the document.","itemtype":"method","name":"retrieve","params":[{"name":"path","description":""}],"return":{"description":"","type":"Object"},"class":"OC.Cache","module":"orbit","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","line":101,"description":"Retrieves a link value.  Returns a null value for empty links.\nFor hasOne links will return a string id value of the link.\nFor hasMany links will return an array of id values.","params":[{"name":"type","description":"Model Type.","type":"String"},{"name":"id","description":"Model ID.","type":"String"},{"name":"link","description":"Link Key.","type":"String"}],"return":{"description":"The value of the link","type":"Array|String|null"},"class":"OC.Cache","module":"orbit","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","line":120,"description":"Returns whether a path exists in the document.","itemtype":"method","name":"exists","params":[{"name":"path","description":""}],"return":{"description":"","type":"Boolean"},"class":"OC.Cache","module":"orbit","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js","line":131,"description":"Transforms the document with an RFC 6902-compliant operation.\n\nCurrently limited to `add`, `remove` and `replace` operations.","itemtype":"method","name":"transform","params":[{"name":"operation","description":"","type":"Object","props":[{"name":"op","description":"Must be \"add\", \"remove\", or \"replace\"","type":"String"},{"name":"path","description":"Path to target location","type":"Array or String"},{"name":"value","description":"Value to set. Required for \"add\" and \"replace\"","type":"Object"}]}],"return":{"description":"Array of inverse operations","type":"Array or undefined"},"class":"OC.Cache","module":"orbit","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":276,"itemtype":"property","name":"operationEncoder","type":"OperationEncoder","class":"OC.Schema","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":282,"description":"Registers a model's schema definition.\n\nEmits the `modelRegistered` event upon completion.","params":[{"name":"model","description":"name of the model","type":"String"},{"name":"definition","description":"model schema definition","type":"Object"}],"class":"OC.Schema","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":331,"description":"Normalizes a record according to its type and corresponding schema\ndefinition.\n\nA record's primary key, links, and meta data will all be initialized.\n\nA record can only be normalized once. A flag is set on the record\n(`__normalized`) to prevent \"re-normalization\".","params":[{"name":"model","description":"record type","type":"String"},{"name":"data","description":"record data","type":"Object"}],"return":{"description":"normalized version of `data`","type":"Object"},"class":"OC.Schema","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":444,"description":"Given a data object structured according to this schema, register all of its\nprimary and secondary key mappings. This data object may contain any number\nof records and types.","params":[{"name":"data","description":"- data structured according to this schema","type":"Object"}],"class":"OC.Schema","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":476,"description":"A naive pluralization method.\n\nOverride with a more robust general purpose inflector or provide an\ninflector tailored to the vocabularly of your application.","params":[{"name":"word","description":"","type":"String"}],"return":{"description":"plural form of `word`","type":"String"},"class":"OC.Schema","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js","line":489,"description":"A naive singularization method.\n\nOverride with a more robust general purpose inflector or provide an\ninflector tailored to the vocabularly of your application.","params":[{"name":"word","description":"","type":"String"}],"return":{"description":"singular form of `word`","type":"String"},"class":"OC.Schema","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/source.js","line":45,"description":"Internal method that applies a single transform to this source.\n\n`_transform` must be implemented by a `Transformable` source.\nIt is called by the public method `transform` in order to actually apply\ntransforms.\n\n`_transform` should return a promise if the operation is asynchronous.","itemtype":"method","name":"_transform","params":[{"name":"operation","description":"JSON PATCH operation as detailed in RFC 6902"}],"access":"private","tagname":"","class":"OC.Source","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/source.js","line":205,"description":"A place to track the creation of any Source, is called in the Source init\nmethod.  The source might not be fully configured / setup by the time you\nreceive it, but we provide this hook for potential debugging tools to monitor\nall sources.","params":[{"name":"source","description":"The newly forged Source.","type":"OC.Source"}],"class":"OC.Source","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/assert.js","line":1,"description":"Throw an exception if `test` is not truthy.","itemtype":"method","name":"assert","params":[{"name":"desc","description":"Description of the error thrown"},{"name":"test","description":"Value that should be truthy for assertion to pass"}],"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/config.js","line":1,"description":"Converts an array of values to an object with those values as properties\nhaving a value of `true`.\n\nThis is useful for converting an array of settings to a more efficiently\naccessible settings object.","example":["\n\n``` javascript\nOrbit.arrayToOptions(['a', 'b']); // returns {a: true, b: true}\n```"],"itemtype":"method","name":"arrayToOptions","params":[{"name":"a","description":"","type":"Array"}],"return":{"description":"Set of options, keyed by the elements in `a`","type":"Object"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/deprecate.js","line":1,"description":"Display a deprecation warning with the provided message.","itemtype":"method","name":"deprecate","params":[{"name":"message","description":"Description of the deprecation","type":"String"},{"name":"test","description":"An optional boolean. If false, the deprecation will be displayed.","type":"Boolean"}],"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/diffs.js","line":5,"description":"Determines the patch operations required to convert one object to another.\n\nSee [RFC 6902](http://tools.ietf.org/html/rfc6902) for a description of patch\noperations and a full set of examples.","example":["\n\n``` javascript\nvar a, b;\n\na = {foo: 'bar'};\nb = {foo: 'bar', 'baz': 'qux'};\n\nOrbit.diffs(a, b); // [{op: 'add', path: '/baz', value: 'qux'}]\n```"],"itemtype":"method","name":"diffs","params":[{"name":"a","description":""},{"name":"b","description":""},{"name":"options","description":"","type":"Object","optional":true,"props":[{"name":"ignore","description":"Properties to ignore","type":"Array","optional":true},{"name":"basePath","description":"A base path to be prefixed to all paths in return patch operations","type":"String","optional":true}]}],"return":{"description":"Array of patch operations to get from `a` to `b` (or undefined if they are equal)","type":"Array"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/eq.js","line":3,"description":"`eq` checks the equality of two objects.\n\nThe properties belonging to objects (but not their prototypes) will be\ntraversed deeply and compared.\n\nIncludes special handling for strings, numbers, dates, booleans, regexes, and\narrays.","itemtype":"method","name":"eq","params":[{"name":"a","description":""},{"name":"b","description":""}],"return":{"description":"are `a` and `b` equal?","type":"Boolean"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/functions.js","line":1,"description":"Wraps a function that expects parameters with another that can accept the parameters as an array","itemtype":"method","name":"spread","params":[{"name":"func","description":"","type":"Object"}],"return":{"description":"","type":"Function"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":3,"description":"Creates a deeply nested clone of an object.\n\nTraverses all object properties (but not prototype properties).","itemtype":"method","name":"clone","params":[{"name":"obj","description":"","type":"Object"}],"return":{"description":"Clone of the original object","type":"Object"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":49,"description":"Expose properties and methods from one object on another.\n\nMethods will be called on `source` and will maintain `source` as the\ncontext.","itemtype":"method","name":"expose","params":[{"name":"destination","description":"","type":"Object"},{"name":"source","description":"","type":"Object"}],"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":79,"description":"Extend an object with the properties of one or more other objects.","itemtype":"method","name":"extend","params":[{"name":"destination","description":"The object to merge into","type":"Object"},{"name":"source","description":"One or more source objects","type":"Object"}],"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":99,"description":"Extend a class with the properties and methods of one or more other classes.\n\nWhen a method is replaced with another method, it will be wrapped in a\nfunction that makes the replaced method accessible via `this._super`.","itemtype":"method","name":"extendClass","params":[{"name":"destination","description":"The class to merge into","type":"Object"},{"name":"source","description":"One or more source classes","type":"Object"}],"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":148,"description":"Define a new class with the properties and methods of one or more other classes.\n\nThe new class can be based on a `SuperClass`, which will be inserted into its\nprototype chain.\n\nFurthermore, one or more mixins (object that contain properties and/or methods)\nmay be specified, which will be applied in order. When a method is replaced\nwith another method, it will be wrapped in a function that makes the previous\nmethod accessible via `this._super`.","itemtype":"method","name":"defineClass","params":[{"name":"SuperClass","description":"A base class to extend. If `mixins` are to be included\n                           without a `SuperClass`, pass `null` for SuperClass.","type":"Object"},{"name":"mixins","description":"One or more objects that contain properties and methods\n                       to apply to the new class.","type":"Object"}],"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":242,"description":"Checks whether an object is an instance of an `Array`","itemtype":"method","name":"isArray","params":[{"name":"obj","description":"","type":"Object"}],"return":{"description":"","type":"Boolean"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":254,"description":"Checks whether a value is a non-null object","itemtype":"method","name":"isObject","params":[{"name":"obj","description":"","type":"Object"}],"return":{"description":"","type":"Boolean"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":266,"description":"Checks whether an object is null or undefined","itemtype":"method","name":"isNone","params":[{"name":"obj","description":"","type":"Object"}],"return":{"description":"","type":"Boolean"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js","line":278,"description":"Combines two objects values","itemtype":"method","name":"merge","params":[{"name":"base","description":"","type":"Object"},{"name":"source","description":"","type":"Object"}],"return":{"description":"","type":"Object"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/operations.js","line":159,"description":"Coalesces operations into a minimal set of equivalent operations","itemtype":"method","name":"coalesceOperations","params":[{"name":"operations","description":"","type":"Array"}],"return":{"description":"","type":"Array"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/strings.js","line":1,"description":"Uppercase the first letter of a string. The remainder of the string won't\nbe affected.","itemtype":"method","name":"capitalize","params":[{"name":"str","description":"","type":"String"}],"return":{"description":"capitalized string","type":"String"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/stubs.js","line":1,"description":"Empty method that does nothing.\n\nUse as a placeholder for non-required static methods.","itemtype":"method","name":"noop","class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/stubs.js","line":11,"description":"Empty method that should be overridden. Otherwise, it will throw an Error.\n\nUse as a placeholder for required static methods.","itemtype":"method","name":"required","class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js","line":1,"description":"Fast UUID generator, RFC4122 version 4 compliant.","author":"Jeff Ward (jcward.com).","license":"MIT license","link":"http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136","class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js","line":8,"description":"ES 6 Module","author":"Andrew Hacking (ahacking@gmail.com)","class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js","line":15,"description":"`uuid` generates a Version 4 UUID using Jeff Wards high performance generator.","itemtype":"method","name":"v4uuid","return":{"description":"a version 4 UUID","type":"String"},"class":"Orbit","module":"orbit-common"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js","line":27,"description":"Called when all the `data` in a cache has been reset.\n\nThe return value is ignored.","params":[{"name":"data","description":"a complete replacement set of data","type":"Object","optional":true}],"class":"OC.OperationProcessor","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js","line":36,"description":"Called before an `operation` has been applied.\n\nReturn an array of operations to be applied **BEFORE** the `operation` itself\nis applied.","params":[{"name":"operation","description":"","type":"OC.Operation","optional":true}],"return":{"description":"an array of `OC.Operation` objects","type":"Array"},"class":"OC.OperationProcessor","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js","line":49,"description":"Called before an `operation` has been applied.\n\nReturn an array of operations to be applied **AFTER** the `operation` itself\nis applied.","params":[{"name":"operation","description":"","type":"OC.Operation","optional":true}],"return":{"description":"an array of `OC.Operation` objects","type":"Array"},"class":"OC.OperationProcessor","module":"orbit-common","namespace":"OC"},{"file":"/Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js","line":62,"description":"Called **AFTER** an `operation` and any related operations have been\napplied.\n\nReturn an array of operations to be applied **AFTER** `operation` itself\nis applied.","params":[{"name":"operation","description":"","type":"OC.Operation","optional":true}],"return":{"description":"an array of `OC.Operation` objects","type":"Array"},"class":"OC.OperationProcessor","module":"orbit-common","namespace":"OC"}],"warnings":[{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:43"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:59"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:83"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:100"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:119"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:136"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:153"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/document.js:170"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/evented.js:92"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/notifier.js:97"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/request-connector.js:90"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js:70"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js:88"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js:120"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js:131"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/config.js:1"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/diffs.js:5"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/eq.js:3"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/functions.js:1"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js:3"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js:242"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js:254"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js:266"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/objects.js:278"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/operations.js:159"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/strings.js:1"},{"message":"unknown tag: license","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js:1"},{"message":"unknown tag: link","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js:1"},{"message":"replacing incorrect tag: returns with return","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js:15"},{"message":"Missing item type\nShould return the handler for a Requestable action.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/request-connector.js:90"},{"message":"Missing item type\nRetrieves a link value.  Returns a null value for empty links.\nFor hasOne links will return a string id value of the link.\nFor hasMany links will return an array of id values.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/cache.js:101"},{"message":"Missing item type\nRegisters a model's schema definition.\n\nEmits the `modelRegistered` event upon completion.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js:282"},{"message":"Missing item type\nNormalizes a record according to its type and corresponding schema\ndefinition.\n\nA record's primary key, links, and meta data will all be initialized.\n\nA record can only be normalized once. A flag is set on the record\n(`__normalized`) to prevent \"re-normalization\".","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js:331"},{"message":"Missing item type\nGiven a data object structured according to this schema, register all of its\nprimary and secondary key mappings. This data object may contain any number\nof records and types.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js:444"},{"message":"Missing item type\nA naive pluralization method.\n\nOverride with a more robust general purpose inflector or provide an\ninflector tailored to the vocabularly of your application.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js:476"},{"message":"Missing item type\nA naive singularization method.\n\nOverride with a more robust general purpose inflector or provide an\ninflector tailored to the vocabularly of your application.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/schema.js:489"},{"message":"Missing item type\nA place to track the creation of any Source, is called in the Source init\nmethod.  The source might not be fully configured / setup by the time you\nreceive it, but we provide this hook for potential debugging tools to monitor\nall sources.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/source.js:205"},{"message":"Missing item type\nFast UUID generator, RFC4122 version 4 compliant.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js:1"},{"message":"Missing item type\nES 6 Module","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit/lib/uuid.js:8"},{"message":"Missing item type\nCalled when all the `data` in a cache has been reset.\n\nThe return value is ignored.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js:27"},{"message":"Missing item type\nCalled before an `operation` has been applied.\n\nReturn an array of operations to be applied **BEFORE** the `operation` itself\nis applied.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js:36"},{"message":"Missing item type\nCalled before an `operation` has been applied.\n\nReturn an array of operations to be applied **AFTER** the `operation` itself\nis applied.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js:49"},{"message":"Missing item type\nCalled **AFTER** an `operation` and any related operations have been\napplied.\n\nReturn an array of operations to be applied **AFTER** `operation` itself\nis applied.","line":" /Users/jmeas/WebDev/orbit/orbit.js/lib/orbit-common/operation-processors/operation-processor.js:62"}]}